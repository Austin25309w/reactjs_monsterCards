{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardLIst","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","string","searchField","handlecChange","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAAe,I,wBCGFA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAEP,mCAAOL,EAAMI,QAAQE,QACrB,4BAAIN,EAAMI,QAAQG,YCPbC,EAAW,SAAAR,GAAK,OAG7B,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAEzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLbM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,KAAK,SACLb,UAAU,SACVW,YAAcA,EACdG,SAAYF,MCsCLG,E,kDAzCb,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IACDiB,MAAQ,CACXC,OAAQ,SACRT,SAAU,GACVU,YAAa,IAEf,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAPL,E,qDAUlB,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAElB,SAAUiB,S,2BAG3C,SAAcE,GACZC,KAAKF,SAAS,CAAER,YAAaS,EAAEE,OAAOC,U,oBAKxC,WAAS,IAAD,OACN,EAAgCF,KAAKZ,MAA9BR,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,YACXa,EAAmBvB,EAASwB,QAAO,SAAA7B,GAAO,OAAIA,EAAQE,KAAK4B,cAAcC,SAAShB,EAAYe,kBACpG,OACE,sBAAKjC,UAAU,MAAf,UACE,6BAAK4B,KAAKZ,MAAMC,SAChB,wBAAQkB,QAAW,kBAAM,EAAKT,SAAS,CAAET,OAAQ,UAAjD,6BACA,mDACD,cAAC,EAAD,CACEN,YAAa,kBACbC,aAAegB,KAAKT,gBAGrB,cAAC,EAAD,CAAUX,SAAYuB,W,GApCZK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a6fca4f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.style.css'\n\nexport const Card = props => (\n\n    <div className=\"card-container\">\n        <img \n            alt=\"monster\"\n            src={`https://robohash.org/${props.monster.id}1?set=set2&size=180x180`}\n        />\n        <h2> { props.monster.name }</h2>\n        <p>{props.monster.email}</p>\n    </div>\n\n)\n\n    \n","import React from 'react';\nimport './card-list.style.css'\nimport { Card  } from '../card/card.component';\n\nexport const CardLIst = props => (\n\n\n<div className=\"card-list\">\n   { props.monsters.map( monster => (\n\n       <Card key={monster.id} monster={monster}/>\n   )\n   )}</div>\n)\n    ","import React from 'react';\n\nimport './search-box.style.css'\n\n// this component is to gatter search text, no state has changed\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input \n        type='search' \n        className='search' \n        placeholder= {placeholder} \n        onChange = {handleChange} \n        />\n\n)","import logo from './logo.svg';\nimport React, {Component} from 'react'\nimport './App.css';\nimport { CardLIst } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      string: 'Nathan',\n      monsters: [],\n      searchField: ''\n    }\n    this.handlecChange = this.handlecChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}))\n  }\n\n  handlecChange(e){\n    this.setState({ searchField: e.target.value })\n  }\n\n\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>{this.state.string}</h1>\n        <button onClick = {() => this.setState({ string: 'Kyle'})}>click to change</button>\n        <h1> Monsters Rolodex</h1>\n       <SearchBox \n         placeholder= 'search monsters'\n         handleChange= {this.handlecChange}\n         />\n\n        <CardLIst monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}